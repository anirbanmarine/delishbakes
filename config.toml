baseurl = "https://prod.d1b22nxeomvnlf.amplifyapp.com/"
title = "Best cake in Durgapur"
theme = "hugo-creative-portfolio-theme"
languageCode = "en-us"
# Enable comments by entering your Disqus shortname
disqusShortname = ""
# Enable Google Analytics by entering your tracking code
googleAnalytics = ""

[taxonomies]
category ='categories'
tag= 'tags'
[params]
  # Style options: default (pink), blue, green, pink, red, sea, violet
  # Use custom.css for your custom styling
  style = "red"
  description = "The very best cake for Durgapur"
  copyright = "&copy;2022 NILIMA ENTERPRISE"
  sidebarAbout = [
    "The best cake in Durgapur ,crafted with love",
    "Delivered to your home on time ,everytime."
  ]
  # Contact page
     # Since this template is static, the contact form uses www.formspree.io as a
     # proxy. The form makes a POST request to their servers to send the actual
     # email. Visitors can send up to a 1000 emails each month for free.
     #
     # What you need to do for the setup?
     #
     # - set your email address under 'email' below
     # - upload the generated site to your server
     # - send a dummy email yourself to confirm your account
     # - click the confirm link in the email from www.formspree.io
     # - you're done. Happy mailing!
  email = "bestcakedurgapur@gmail.com"

    # Optional Matomo analytics (formerly piwik)
      # [params.analytics.matomo]
      #  URL = "https://stats.example.com"
      #  ID = "42"
      #  # Track all subdomains with "*.example.com" (Optional)
      #  domain = "www.example.com"
      #  # Optional integrity check hash
      #  hash = ""

  # Nav links in the side bar
  [[params.navlinks]]
  name = "Home"
  url = "tags/"
  home = true
  
  [[params.navlinks]]
  name ="Categories"
  url = "categories/"
  
  
  [[params.navlinks]]
  name = "About"
  url = "about/"

  [[params.navlinks]]
  name = "Terms and Conditions"
  url = "contact/"

  
  [params.social]
  facebook      = "https://facebook.com/bestcakedgp"
  googleplus    = "full profile url in googleplus"
  email         = "bestcakedurgapur@gmail.com"
  twitter       = "full profile url in twitter"
  linkedin      = "full profile url in linkedin"
  stackoverflow = "full profile url in stackoverflow"
  instagram     = "https://instagram.com/bestcakedgp"
  github        = "full profile url in github"
  gitlab        = "full profile url in gitlab"
  youtube       = "full profile url in youtube"
  whatsapp      = "https://wa.me/09800725841"
  [deployment]
# By default, files are uploaded in an arbitrary order.
# Files that match the regular expressions in the "Order" list
# will be uploaded first, in the listed order.
order = [".jpg$", ".gif$"]


[outputs]
  home = ['HTML','RSS','JSON']
  portfolio =['HTML','RSS','JSON']
  
[[deployment.targets]]
# An arbitrary name for this target.
name = "awspub"
# The Go Cloud Development Kit URL to deploy to. Examples:
# GCS; see https://gocloud.dev/howto/blob/#gcs
# URL = "gs://<Bucket Name>"

# S3; see https://gocloud.dev/howto/blob/#s3
# For S3-compatible endpoints, see https://gocloud.dev/howto/blob/#s3-compatible
 URL = "s3://secure.delishbakes.com/?region=us-east-1"

# Azure Blob Storage; see https://gocloud.dev/howto/blob/#azure
# URL = "azblob://$web"

# You can use a "prefix=" query parameter to target a subfolder of the bucket:
# URL = "gs://<Bucket Name>?prefix=a/subfolder/"

# If you are using a CloudFront CDN, deploy will invalidate the cache as needed.
#cloudFrontDistributionID = <ID>

# Optionally, you can include or exclude specific files.
# See https://godoc.org/github.com/gobwas/glob#Glob for the glob pattern syntax.
# If non-empty, the pattern is matched against the local path.
# All paths are matched against in their filepath.ToSlash form.
# If exclude is non-empty, and a local or remote file's path matches it, that file is not synced.
# If include is non-empty, and a local or remote file's path does not match it, that file is not synced.
# As a result, local files that don't pass the include/exclude filters are not uploaded to remote,
# and remote files that don't pass the include/exclude filters are not deleted.
# include = "**.html" # would only include files with ".html" suffix
# exclude = "**.{jpg, png}" # would exclude files with ".jpg" or ".png" suffix


# [[deployment.matchers]] configure behavior for files that match the Pattern.
# See https://golang.org/pkg/regexp/syntax/ for pattern syntax.
# Pattern searching is stopped on first match.

# Samples:

[[deployment.matchers]]
# Cache static assets for 1 year.
pattern = "^.+\\.(js|css|svg|ttf)$"
cacheControl = "max-age=31536000, no-transform, public"
gzip = true

[[deployment.matchers]]
pattern = "^.+\\.(png|jpg)$"
cacheControl = "max-age=31536000, no-transform, public"
gzip = false

[[deployment.matchers]]
# Set custom content type for /sitemap.xml
pattern = "^sitemap\\.xml$"


contentType = "application/xml"
gzip = true

[[deployment.matchers]]
pattern = "^.+\\.(html|xml|json)$"
gzip = true

 
